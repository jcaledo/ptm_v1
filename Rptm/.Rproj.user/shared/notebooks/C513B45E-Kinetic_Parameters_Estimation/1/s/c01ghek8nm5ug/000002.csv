"0","lb <- function(data, unit_S = 'mM', unit_v = 'au', weighting = FALSE, plot = TRUE){"
"0",""
"0","  ## -------------------- Removing incomplete data --------------------- ##"
"0","  data <- data[complete.cases(data), ]"
"0","  colnames(data)[1] <- 'S'"
"0",""
"0","  ## ------------------ Taking double reciprocal ----------------------- ##"
"0","  tdata <- apply(data, MARGIN = 2, function(x)  1/x)"
"0","  tdata <- as.data.frame(round(tdata, 4))"
"0","  names(tdata)[1] <- 'inv_S'"
"0",""
"0",""
"0","  ## ---------------- Replicates model fitting ------------------------- ##"
"0","  Kms <- Vms <- R2 <- c()"
"0","  for (j in 2:ncol(tdata)){"
"0","    model <- lm(tdata[,j] ~ tdata$inv_S )"
"0","    Vm <- round(1/model$coefficients[1], 2)"
"0","    Km <- round(Vm * model$coefficients[2], 2)"
"0","    Vms <- c(Vms, Vm)"
"0","    Kms <- c(Kms, Km)"
"0","    R2 <- c(R2,  summary(model)$r.squared)"
"0","  }"
"0",""
"0","  ## ---- Computing mean and sd if required of the transformed data ---- ##"
"0","  if (ncol(tdata) > 2){"
"0","    tdata$inv_v <- round(apply(tdata[,-1], MARGIN = 1, mean), 4)"
"0","    tdata$sd <- round(apply(tdata[,-c(1, ncol(tdata))], MARGIN = 1, sd), 4)"
"0","  } else {"
"0","    names(tdata)[2] <- 'inv_v'"
"0","  }"
"0","  ## ------------------ Mean model fitting ----------------------------- ##"
"0","  if (weighting){"
"0","    model <- lm(tdata$inv_v ~ tdata$inv_S, weights = 1/(tdata$inv_v)^4)"
"0","  } else {"
"0","    model <- lm(tdata$inv_v ~ tdata$inv_S)"
"0","  }"
"0",""
"0","  Vm <- round(1/model$coefficients[1], 2)"
"0","  Km <- round(Vm * model$coefficients[2], 2)"
"0",""
"0","  ## -------------- Plotting the transformed data ---------------------- ##"
"0","  if (plot == TRUE){"
"0","    parameters <- paste('Km: ', Km, '     Vm: ', Vm, sep = """")"
"0","    plot(tdata$inv_S, tdata$inv_v, ty = 'p',"
"0","         ylim = c(0, max(tdata[,-1]) + 0.1*max(tdata[,-1])),"
"0","         xlab = paste('1/[S] (1/', unit_S, ')', sep = """"),"
"0","         ylab = paste('1/v (1/', unit_v, ')', sep = """"), main = parameters)"
"0","    abline(model)"
"0",""
"0","    if (ncol(tdata) > 2){"
"0","      arrows(tdata$inv_S, tdata$inv_v - tdata$sd,"
"0","             tdata$inv_S, tdata$inv_v + tdata$sd,"
"0","             length=0.05, angle=90, code=3)"
"0","    }"
"0","  }"
"0",""
"0","  fitted_parameters <- c(Km, Vm)"
"0","  names(fitted_parameters) <- c('Km', 'Vm')"
"0","  output <- list(unname(Kms), unname(Vms), R2, fitted_parameters, tdata)"
"0","  names(output) <- c('Kms', 'Vms', 'R2s', 'fitted_parameters', 'inverse_data')"
"0","  return(output)"
"0","}"
